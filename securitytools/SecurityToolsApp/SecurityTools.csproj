<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
  </PropertyGroup>

  <PropertyGroup>
    <Title>SecurityTools</Title>
    <Description>Provides several security related features.</Description>
    <Authors>GGolbik</Authors>
    <Copyright>Copyright © GGolbik 2024</Copyright>
    <!-- Version: (<major>.<minor>.<build/patch>) is the only version the Common Language Runtime (CLR) cares about. -->
    <Version>0.0.0</Version>
    <!-- InformationalVersion: is intended to represent the version of your entire product -->
    <InformationalVersion></InformationalVersion>
  </PropertyGroup>

  <ItemGroup Condition="$(ReleaseDate) != ''">
    <!-- Add parameter /property:ReleaseDate=yyyy-MM-ddTHH:mm:ssZ at dotnet build command -->
    <AssemblyMetadata Include="ReleaseDate" Value="$(ReleaseDate)" />
  </ItemGroup>

  <ItemGroup Condition="$(VersionName) != ''">
    <!-- Add parameter /property:VersionName=Awesome at dotnet build command -->
    <AssemblyMetadata Include="VersionName" Value="$(VersionName)" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Asp.Versioning.Mvc" Version="8.1.0" />
    <PackageReference Include="Asp.Versioning.Mvc.ApiExplorer" Version="8.1.0" />
    <PackageReference Include="CommandLineParser" Version="2.9.1" />
    <PackageReference Include="ElectronNET.API" Version="23.6.2" />
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.8" />
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="8.0.8" />
    <PackageReference Include="Microsoft.Data.Sqlite" Version="8.0.8" />
    <PackageReference Include="Microsoft.Extensions.Hosting.Systemd" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="8.0.0" />
    <PackageReference Include="Serilog" Version="4.0.2" />
    <PackageReference Include="Serilog.AspNetCore" Version="8.0.2" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Serilog.Sinks.Async" Version="2.0.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
    <PackageReference Include="Serilog.Sinks.SQLite" Version="6.0.0" />
    <PackageReference Include="SharpZipLib" Version="1.4.2" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\SecurityToolsCore\SecurityToolsCore.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <SpaRoot>../SecurityToolsWeb/</SpaRoot>
    <SpaProxyServerUrl>http://localhost:4200</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <PropertyGroup>
    <ElectronRoot>obj/</ElectronRoot>
  </PropertyGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(ElectronRoot)**" />
    <None Remove="$(ElectronRoot)**" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --" />
    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\application\browser\**; $(SpaRoot)dist-server\**; $(SpaRoot)dist\application\3rdpartylicenses.txt" />
      <ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <IsWindows Condition="$(RuntimeIdentifier.StartsWith('win'))">true</IsWindows>
    <IsOSX Condition="$(RuntimeIdentifier.StartsWith('osx'))">true</IsOSX>
    <IsLinux Condition="$(RuntimeIdentifier.StartsWith('linux'))">true</IsLinux>
  </PropertyGroup>

  <Target Name="LinuxTarget" AfterTargets="Publish" Condition="'$(IsLinux)'=='true'">
    <ItemGroup>
      <TargetSourceFiles Include="Targets/Linux/**/*" />
    </ItemGroup>
    <Copy SourceFiles="@(TargetSourceFiles)" DestinationFolder="$(PublishDir)" />
  </Target>

  <Target Name="WindowsTarget" AfterTargets="Publish" Condition="'$(IsWindows)'=='true'">
    <ItemGroup>
      <TargetSourceFiles Include="Targets/Windows/**/*" />
    </ItemGroup>
    <Copy SourceFiles="@(TargetSourceFiles)" DestinationFolder="$(PublishDir)" />
  </Target>

  <ItemGroup>
    <Content Update="electron.manifest.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

</Project>